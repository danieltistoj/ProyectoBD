/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InternalFrame;

import Clases.*;
import java.awt.Color;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Usuarios
 */
public class Material_Interno extends javax.swing.JInternalFrame {

    private String[] titulos = {"Id", "Nombre", "Alto", "Ancho", "Cantidad", "Color", "Tipo", "Costo"};
    private String ID = "", nombreTemp = "";
    private Modulo material;
    private int opcion;
    private VariableGlobal conexion;

    public Material_Interno(int tipoUsuario) {
        initComponents();
        botonCancelar.setEnabled(false);
        botonGuardar.setEnabled(false);
        tabbed.setEnabledAt(1, false);
        material = new Modulo();
        conexion = new VariableGlobal();
        if (tipoUsuario == 0) {
            botonNuevo.setEnabled(false);
            menuEmergenteEliminar.setEnabled(false);
            botonEditar.setEnabled(false);
            botonReporte.setEnabled(false);
        }

        botonNuevo.setToolTipText("Nuevo");
        botonEditar.setToolTipText("Editar");
        botonGuardar.setToolTipText("Guardar");
        botonCancelar.setToolTipText("Cancelar");
        botonReporte.setToolTipText("Reporte");
        botonCargar.setToolTipText("Cargar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogNuevo = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        eliminarMaterial = new javax.swing.JPopupMenu();
        menuEmergenteEliminar = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        botonEditar = new javax.swing.JButton();
        botonReporte = new javax.swing.JButton();
        botonNuevo = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        tabbed = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMaterial = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        botonCargar = new javax.swing.JButton();
        txtCargar = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        txtCosto = new javax.swing.JTextField();
        radioTipo = new javax.swing.JRadioButton();
        comboTipo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dialogNuevoLayout = new javax.swing.GroupLayout(dialogNuevo.getContentPane());
        dialogNuevo.getContentPane().setLayout(dialogNuevoLayout);
        dialogNuevoLayout.setHorizontalGroup(
            dialogNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogNuevoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        dialogNuevoLayout.setVerticalGroup(
            dialogNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogNuevoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        menuEmergenteEliminar.setText("Eliminar");
        menuEmergenteEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEmergenteEliminarActionPerformed(evt);
            }
        });
        eliminarMaterial.add(menuEmergenteEliminar);

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle("Materiales ");
        setToolTipText("");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 102, 51), new java.awt.Color(255, 102, 51)));

        botonEditar.setBackground(new java.awt.Color(255, 255, 255));
        botonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar2.png"))); // NOI18N
        botonEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonEditarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonEditarMouseExited(evt);
            }
        });
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        botonReporte.setBackground(new java.awt.Color(255, 255, 255));
        botonReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/reporte.png"))); // NOI18N
        botonReporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonReporteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonReporteMouseExited(evt);
            }
        });
        botonReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReporteActionPerformed(evt);
            }
        });

        botonNuevo.setBackground(new java.awt.Color(255, 255, 255));
        botonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/nuevo2.png"))); // NOI18N
        botonNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonNuevoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonNuevoMouseExited(evt);
            }
        });
        botonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoActionPerformed(evt);
            }
        });

        botonGuardar.setBackground(new java.awt.Color(255, 255, 255));
        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/guardar2.png"))); // NOI18N
        botonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonGuardarMouseExited(evt);
            }
        });
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonCancelar.setBackground(new java.awt.Color(255, 255, 255));
        botonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar2.png"))); // NOI18N
        botonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonCancelarMouseExited(evt);
            }
        });
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botonReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(botonEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonNuevo)
                .addGap(24, 24, 24)
                .addComponent(botonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(botonGuardar)
                .addGap(18, 18, 18)
                .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 102, 51), new java.awt.Color(255, 102, 51)));

        tablaMaterial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaMaterial.setComponentPopupMenu(eliminarMaterial);
        jScrollPane1.setViewportView(tablaMaterial);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 102, 51), new java.awt.Color(255, 102, 51)));

        botonCargar.setBackground(new java.awt.Color(255, 255, 255));
        botonCargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cargar2.png"))); // NOI18N
        botonCargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonCargarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonCargarMouseExited(evt);
            }
        });
        botonCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarActionPerformed(evt);
            }
        });

        txtCargar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 51), 2));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(botonCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txtCargar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbed.addTab("Material", jPanel6);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 102, 51), new java.awt.Color(255, 102, 51)));

        jLabel1.setText("NOMBRE:");

        txtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 51), 2));

        jLabel3.setText("COLOR:");

        jLabel5.setText("COSTO:");

        txtColor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 51), 2));

        txtCosto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0), 2));
        txtCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostoKeyTyped(evt);
            }
        });

        radioTipo.setBackground(new java.awt.Color(255, 255, 255));
        radioTipo.setText("Tipo");

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carta", "Oficio" }));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("*");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("*");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5))
                            .addComponent(radioTipo))))
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre)
                    .addComponent(txtColor)
                    .addComponent(txtCosto, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(41, 41, 41)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(37, 37, 37)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioTipo))
                .addGap(98, 98, 98))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbed.addTab("Nuevo/Editar", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbed, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tabbed))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarPanel() {
        txtColor.setText("");
        txtCosto.setText("");
        txtNombre.setText("");
        radioTipo.setSelected(false);
        comboTipo.setSelectedIndex(0);

        botonNuevo.setEnabled(true);
        botonReporte.setEnabled(true);

        botonEditar.setEnabled(true);

        botonCancelar.setEnabled(false);
        botonGuardar.setEnabled(false);

        tabbed.setEnabledAt(1, false);
        tabbed.setEnabledAt(0, true);
        tabbed.setSelectedIndex(0);

        radioTipo.setSelected(false);
        comboTipo.setSelectedIndex(0);

    } //Limpiar el panel de nuevo y editar 

    private void activarBotones() {
        botonNuevo.setEnabled(false);
        botonReporte.setEnabled(false);

        botonEditar.setEnabled(false);

        botonCancelar.setEnabled(true);
        botonGuardar.setEnabled(true);
    } // activar los botones guardar y cancelar 

    private int getId(String nombreBuscar) {
        int id = -1;
        //ConexionMySQL conexion1 = new ConexionMySQL(localhost,puerto,baseDeDatos,usuario,contra);
        conexion.conexionMySQL.EjecutarConsulta("SELECT * FROM material WHERE nombre =" + "'" + nombreBuscar + "'");
        ResultSet rs = conexion.conexionMySQL.getResulSet();
        try {
            while (rs.next()) {
                id = Integer.parseInt(rs.getString("id"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Material_Interno.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
    } // retorna el id del material

    private boolean existeMaterial(String parametro, String tabla, String formaParametro) {
        boolean existe = false;

        try {

            conexion.conexionMySQL.EjecutarConsulta("SELECT COUNT(*) FROM " + tabla + " WHERE " + formaParametro + " = " + parametro + "");
            ResultSet rs = conexion.conexionMySQL.getResulSet();
            rs.next();
            if (rs.getInt(1) > 0) {
                existe = true;
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return existe;
    }//retorna booleano que nos indica si existe o no el material

    private void eliminarMaterial(String idMaterial, String tabla, String formaId) {
        conexion.conexionMySQL.EjecutarInstruccion("DELETE FROM " + tabla + " WHERE " + formaId + " = " + idMaterial);
    }// eliminamos los registros en donde este el material

    private void nuevoMaterial(String nombre, String alto, String ancho, String color, String tipo, String costo) {//nuevo registro material 
        //se pregunta si esta deacuerdo con los datos del material
        int res = JOptionPane.showConfirmDialog(rootPane, "¿Esta deacuerdo con el material? \n" + "Nombre: " + nombre
                + "\nColor: " + color + "\nTipo: " + tipo + "\nDimensiones: " + alto + "cm x " + ancho + "cm" + "\nCosto: " + costo, "Advertencia",
                JOptionPane.YES_NO_OPTION);
        if (res == 0) {//si esta deacuerdo con los datos del material 
            //se inserta el material en la base de datos.
            conexion.conexionMySQL.EjecutarInstruccion("INSERT INTO material(nombre,alto,ancho,cantidad,color,tipo,costo)"
                    + "VALUES ('" + nombre + "'," + alto + "," + ancho + "," + 0 + ",'" + color + "' ,'" + tipo + "'," + costo + ")");

            //Mensaje que describe que el material ingreso en el sistema      
            JOptionPane.showMessageDialog(null, "Material Ingresado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            limpiarPanel();
        }

    }//insertamos un nuevo registro de material

    private void modificarMaterial(String nombre, String alto, String ancho, String color, String tipo, String costo) {//modificar un registtro de material
        //se pregunta si esta deacuerdo con los datos del material
        int res = JOptionPane.showConfirmDialog(rootPane, "¿Esta deacuerdo con la modificacion del material? \n" + "Nombre: " + nombre
                + "\nColor: " + color + "\nTipo: " + tipo + "\nDimensiones: " + alto + "cm x " + ancho + "cm" + "\nCosto: " + costo, "Advertencia",
                JOptionPane.YES_NO_OPTION);
        if (res == 0) {//si esta deacuerdo con los datos del material 
            //se inserta el material en la base de datos.

            conexion.conexionMySQL.EjecutarInstruccion("UPDATE material SET nombre = '" + nombre + "'," + "alto = " + alto + ","
                    + "ancho = " + ancho + ",color = '" + color + "',tipo = '" + tipo + "', costo = " + costo + " WHERE id = " + ID);

            //Mensaje que describe que el material ingreso en el sistema      
            JOptionPane.showMessageDialog(null, "Material Modificado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            limpiarPanel();
        }

    }//se modifica el registro del material seleccionado

    private void guardarNuevoMaterial() {
        String tipo = "NULL", nombre = "", alto = "NULL", ancho = "NULL";
        int idNombreActual, idNombreAnterior;
        if (txtNombre.getText().length() == 0 || txtCosto.getText().length() == 0) { // ver si los campos nombre y costo estan llenos 
            JOptionPane.showMessageDialog(null, "Llene los campos obligatorios", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {//si los campos obligatorios estan llenos.  

            if (!existeMaterial("'" + txtNombre.getText() + "'", "material", "nombre")) {//si el nombre del material no existe
                if (radioTipo.isSelected()) {//Si la opcion tipo esta habilitada
                    if (comboTipo.getSelectedIndex() == 0) {// si es carta 
                        alto = "27.94";
                        ancho = "21.59";
                        tipo = "Carta";
                    } else {// si es oficio
                        alto = "33";
                        ancho = "21.64";
                        tipo = "Oficio";
                    }

                }

                nuevoMaterial(txtNombre.getText(), alto, ancho, txtColor.getText(), tipo, txtCosto.getText());//insertamos los materiales 
            }//fin del if(nombre == "")
            else {
                JOptionPane.showMessageDialog(null, "El nombre del producto ya existe", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//la accion que hace el boton guardar si se quiere un nuevo material

    private void guardarEdicionMaterial() {
        int idNombreActual, idNombreAnterior;
        String tipo = "NULL", nombre = "", alto = "NULL", ancho = "NULL";
        if (txtNombre.getText().length() == 0 || txtCosto.getText().length() == 0) { // ver si los campos nombre y costo estan llenos 
            JOptionPane.showMessageDialog(null, "Llene los campos obligatorios", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            idNombreAnterior = getId(nombreTemp);
            idNombreActual = getId(txtNombre.getText());

            if ((idNombreAnterior == idNombreActual) || (idNombreAnterior != idNombreActual && idNombreActual < 0)) {//si el nombre del material no existe
                if (radioTipo.isSelected()) {//Si la opcion tipo esta habilitada
                    if (comboTipo.getSelectedIndex() == 0) {// si es carta 
                        alto = "27.94";
                        ancho = "21.59";
                        tipo = "Carta";
                    } else {// si es oficio
                        alto = "33";
                        ancho = "21.64";
                        tipo = "Oficio";
                    }

                }

                modificarMaterial(txtNombre.getText(), alto, ancho, txtColor.getText(), tipo, txtCosto.getText());//insertamos los materiales 
            }//fin del if(nombre == "")
            else {
                JOptionPane.showMessageDialog(null, "El nombre del producto ya existe", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//la accion que hace el boton guardar si modificamos un registro de material//la accion que hace el boton guardar si modificamos un registro de material//la accion que hace el boton guardar si modificamos un registro de material//la accion que hace el boton guardar si modificamos un registro de material

    private void modificarCostoProducto(String idMaterial) {
        int cantidad;
        float costoProduccion, costoMaterial, totalCosto;
        //con esta consulta obtenemos los id de los productos a los cuales esta relacionado el material 
        conexion.conexionMySQL.EjecutarConsulta("select * from producto_has_material PM where PM.material_id = " + idMaterial);
        ResultSet rs = conexion.conexionMySQL.getResulSet();
        try {
            while (rs.next()) {//recorremos todas las filas, las cuales son el resultado de la consulta anterior 
                System.out.println("id producto = " + rs.getString("producto_id") + " Id Material = " + rs.getString("material_id"));
                costoProduccion = Float.parseFloat(material.getDato("id", rs.getString("producto_id"), "producto", "costoProduccion"));//obtenemos el costo de produccion
                System.out.println("costo de produccion producto = " + costoProduccion);
                cantidad = Integer.parseInt(rs.getString("Cantidad"));//obtenemos la cantidad que necesitamos del material, para producir el producto
                costoMaterial = Float.parseFloat(material.getDato("id", rs.getString("material_id"), "material", "costo"));//obtenemos cunato cuesta una unidad del material
                System.out.println("costo material = " + costoMaterial);
                totalCosto = cantidad * costoMaterial;//obtenemos el costo total del material que seria la cantidad por el costo del material
                System.out.println("costo material para producto = " + totalCosto);
                costoProduccion = costoProduccion - totalCosto;//al costo de produccion le restamos el total del material, que sera ahora nuestro nuevo costo de produccion
                material.modificarRegistro("producto", "costoProduccion = " + costoProduccion, "id", rs.getString("producto_id"));//modificar el costo de produccion del producto sin el costo del material
                System.out.println("nuevo costo de produccion del producto = " + costoProduccion + "\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Modulo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        int fila = tablaMaterial.getSelectedRow();
        float alto1;
        String alto;
        opcion = 0;
        if (fila >= 0) {

            ID = String.valueOf(tablaMaterial.getValueAt(fila, 0));
            if (existeMaterial(ID, "material", "id")) {// ver que el material exista
                nombreTemp = String.valueOf(tablaMaterial.getValueAt(fila, 1));
                txtNombre.setText(nombreTemp);
                txtColor.setText(String.valueOf(tablaMaterial.getValueAt(fila, 5)));
                txtCosto.setText(String.valueOf(tablaMaterial.getValueAt(fila, 7)));
                alto = String.valueOf(tablaMaterial.getValueAt(fila, 2));

                if (alto != "null") {
                    alto1 = (float) tablaMaterial.getValueAt(fila, 2);
                    radioTipo.setSelected(true);
                    if (alto1 == 33.0) {
                        comboTipo.setSelectedIndex(1);
                    }

                }

                tabbed.setSelectedIndex(1);
                tabbed.setEnabledAt(1, true);
                tabbed.setEnabledAt(0, false);
                activarBotones();
            } else {
                JOptionPane.showMessageDialog(null, "El material no existe", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un material", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_botonEditarActionPerformed
//boton de reporte 
    private void botonReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReporteActionPerformed
        try {
            //ConexionMySQL conexion = new ConexionMySQL(localhost,puerto,baseDeDatos,usuario,contra);
            Connection con = conexion.conexionMySQL.getConexion();
            InputStream archivo = getClass().getResourceAsStream("/Reporte/Material.jrxml");
            JasperDesign dise = JRXmlLoader.load(archivo);
            JasperReport jr = JasperCompileManager.compileReport(dise);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp, false);
        } catch (JRException ex) {
            Logger.getLogger(Material_Interno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonReporteActionPerformed
// boton cargar 
    private void botonCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarActionPerformed
        String campo = txtCargar.getText();
        String where = "";
        if (!"".equals(campo)) {
            where = "WHERE id = '" + campo + "' OR nombre = '" + campo + "'";
        }
        try {
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            tablaMaterial.setModel(modelo);
            conexion.conexionMySQL.EjecutarConsulta("SELECT * FROM material " + where + " " + "ORDER BY cantidad");

            ResultSet rs = conexion.conexionMySQL.getResulSet();
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error de conexion", "Advertencia", JOptionPane.WARNING_MESSAGE);
            System.out.println(ex.getMessage());

        }
    }//GEN-LAST:event_botonCargarActionPerformed
// boton nuevo
    private void botonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoActionPerformed
        opcion = 1;
        tabbed.setSelectedIndex(1);
        tabbed.setEnabledAt(1, true);
        tabbed.setEnabledAt(0, false);
        activarBotones();

    }//GEN-LAST:event_botonNuevoActionPerformed
//boton guardar
    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        if (opcion == 1) {
            guardarNuevoMaterial();
        } else {
            guardarEdicionMaterial();

        }
    }//GEN-LAST:event_botonGuardarActionPerformed
//boton cancelar 
    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        tabbed.setSelectedIndex(0);
        limpiarPanel();
    }//GEN-LAST:event_botonCancelarActionPerformed
//accion cuando ingresamos letras en la caja de costo
    private void txtCostoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostoKeyTyped
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo ingrese numeros", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtCostoKeyTyped

    private void menuEmergenteEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEmergenteEliminarActionPerformed
        int fila = tablaMaterial.getSelectedRow(), confirmar;
        String idMaterial, consulta;
        TablaId tabla = new TablaId(tablaMaterial);
        if (fila >= 0) {
            idMaterial = String.valueOf(tablaMaterial.getValueAt(fila, 0));
            confirmar = JOptionPane.showConfirmDialog(null, "¿Esta seguro de eliminar este material?\n"
                    + "Si esta relacionado con un producto, el costo de produccion de este se modificara.", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (confirmar == 0) {
                modificarCostoProducto(idMaterial);
                material.eliminarRegistro(idMaterial, "material", "id");
                JOptionPane.showMessageDialog(null, "El material fue eliminado");

                consulta = "select * from material";
                tabla.llenarTable(consulta, "", "", "", "", "", titulos);

            }

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un material", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_menuEmergenteEliminarActionPerformed

    private void botonNuevoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonNuevoMouseEntered
        if (botonNuevo.isEnabled()) {
            botonNuevo.setBackground(new Color(255, 102, 51));
        }
    }//GEN-LAST:event_botonNuevoMouseEntered

    private void botonNuevoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonNuevoMouseExited
        botonNuevo.setBackground(Color.WHITE);
    }//GEN-LAST:event_botonNuevoMouseExited

    private void botonEditarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEditarMouseEntered
        if (botonEditar.isEnabled()) {
            botonEditar.setBackground(new Color(255, 102, 51));
        }
    }//GEN-LAST:event_botonEditarMouseEntered

    private void botonEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEditarMouseExited
        botonEditar.setBackground(Color.WHITE);
    }//GEN-LAST:event_botonEditarMouseExited

    private void botonGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonGuardarMouseEntered
        if (botonGuardar.isEnabled()) {
            botonGuardar.setBackground(new Color(255, 102, 51));
        }
    }//GEN-LAST:event_botonGuardarMouseEntered

    private void botonGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonGuardarMouseExited
        botonGuardar.setBackground(Color.WHITE);
    }//GEN-LAST:event_botonGuardarMouseExited

    private void botonCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCancelarMouseEntered
        if (botonCancelar.isEnabled()) {
            botonCancelar.setBackground(new Color(255, 102, 51));
        }
    }//GEN-LAST:event_botonCancelarMouseEntered

    private void botonCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCancelarMouseExited
        botonCancelar.setBackground(Color.WHITE);
    }//GEN-LAST:event_botonCancelarMouseExited

    private void botonReporteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonReporteMouseEntered
        if (botonReporte.isEnabled()) {
            botonReporte.setBackground(new Color(255, 102, 51));
        }
    }//GEN-LAST:event_botonReporteMouseEntered

    private void botonReporteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonReporteMouseExited
        botonReporte.setBackground(Color.WHITE);
    }//GEN-LAST:event_botonReporteMouseExited

    private void botonCargarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCargarMouseEntered
        if (botonCargar.isEnabled()) {
            botonCargar.setBackground(new Color(255, 102, 51));
        }
    }//GEN-LAST:event_botonCargarMouseEntered

    private void botonCargarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCargarMouseExited
        botonCargar.setBackground(Color.WHITE);
    }//GEN-LAST:event_botonCargarMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonCargar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JButton botonReporte;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JDialog dialogNuevo;
    private javax.swing.JPopupMenu eliminarMaterial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuEmergenteEliminar;
    private javax.swing.JRadioButton radioTipo;
    private javax.swing.JTabbedPane tabbed;
    private javax.swing.JTable tablaMaterial;
    private javax.swing.JTextField txtCargar;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
